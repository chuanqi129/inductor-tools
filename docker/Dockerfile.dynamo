# syntax=docker/dockerfile:1
ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE} AS dev-base
RUN apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        build-essential \
        ca-certificates \
        ccache \
        cmake \
        curl \
        ffmpeg \
        git \
        libtcmalloc-minimal4 \
        libjpeg-dev \
        libpng-dev \
        libsm6 \
        libxext6 \
        numactl \
        pybind11-dev \
        wget \
        vim \
    && rm -rf /var/lib/apt/lists/*
RUN /usr/sbin/update-ccache-symlinks
RUN mkdir /opt/ccache && ccache --set-config=cache_dir=/opt/ccache
ENV PATH /opt/conda/bin:$PATH

FROM dev-base AS conda
ARG PYTHON_VERSION=3.8
RUN curl -fsSL -v -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Miniconda3-py38_23.9.0-0-Linux-x86_64.sh  && \
    chmod +x ~/miniconda.sh && \
    # Fix conda install issue
    sed -i "s;#!/bin/sh;#!/bin/bash;" ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda config --set channel_priority strict && \
    /opt/conda/bin/conda config --append channels conda-forge && \
    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} \
        astunparse \
        boto3 \        
        cffi \
        cython \
        cmake>=3.13.0 \
        dataclasses \
        future \
        git-lfs \
        intel-openmp \
        ipython \
        mkl \
        mkl-include \
        ninja \
        numpy \
        requests \
        typing \
        typing_extensions \
        Pillow \
        pkg-config \
        pybind11 \
        pycocotools \
        pyyaml \
        setuptools \
        jemalloc \
        openssl \
        urllib3==1.26.16 \  
        weasyprint && \
    /opt/conda/bin/conda clean -ya && \
    # Fix GLIBCXX version issue
    rm -f /opt/conda/lib/libstdc++.so.6

FROM dev-base AS build
ARG PT_REPO=https://github.com/blzheng/pytorch
ARG PT_COMMIT="beilei/baseline"
COPY --from=conda /opt/conda /opt/conda
# ENV LD_PRELOAD /opt/conda/lib/libiomp5.so:/opt/conda/lib/libjemalloc.so
# ENV MALLOC_CONF oversize_threshold:1,background_thread:true,metadata_thp:auto,dirty_decay_ms:-1,muzzy_decay_ms:-1
WORKDIR /workspace
RUN git clone ${PT_REPO} && \
    cd pytorch && git checkout ${PT_COMMIT} && git submodule sync && git submodule update --init --recursive && \
    pip install z3-solver && python setup.py develop && cd ..
# Build Torchdynamo
ARG DYNAMO_COMMIT="beilei/baseline"
RUN git clone https://github.com/blzheng/torchdynamo && \
    cd torchdynamo && git checkout ${DYNAMO_COMMIT} && \
    python setup.py develop && cd .. 
ARG TORCH_VISION_COMMIT="nightly"
ARG TORCH_DATA_COMMIT="nightly"
ARG TORCH_TEXT_COMMIT="nightly"
ARG TORCH_AUDIO_COMMIT="nightly"
RUN git clone https://github.com/pytorch/vision.git && \
    cd vision && git checkout ${TORCH_VISION_COMMIT} && \
    python setup.py bdist_wheel && \
    pip install dist/*.whl && cd .. && \
    git clone https://github.com/pytorch/data.git && \
    cd data && git checkout ${TORCH_DATA_COMMIT} && \
    python setup.py bdist_wheel && \
    pip install dist/*.whl && cd .. && \
    git clone https://github.com/pytorch/text.git && \
    cd text && git checkout ${TORCH_TEXT_COMMIT} && git submodule sync && git submodule update --init --recursive && \
    python setup.py bdist_wheel && \
    pip install dist/*.whl && cd .. && \
    git clone https://github.com/pytorch/audio.git && \
    cd audio && git checkout ${TORCH_AUDIO_COMMIT} && git submodule sync && git submodule update --init --recursive && \
    # Workaround for https://github.com/pytorch/audio/issues/2784
    sed -i "3 i link_directories(/opt/conda/lib)" CMakeLists.txt && \
    python setup.py bdist_wheel && \
    pip install dist/*.whl && cd ..
ARG TORCH_BENCH_COMMIT="main"
ARG HF_HUB_TOKEN=hf_xxx
ENV HUGGING_FACE_HUB_TOKEN ${HF_HUB_TOKEN}
RUN git clone https://github.com/pytorch/benchmark.git && \
    cd benchmark && git checkout ${TORCH_BENCH_COMMIT} && pip install --no-deps -r requirements.txt && \
    pip install --no-cache Jinja2==3.1.2 markupsafe==2.0.1 && \  
    python install.py && \
    # Need update numpy version to avoid some models crash
    pip install --upgrade numpy
RUN python -c "import torch, torchdynamo, torchvision, torchtext"

# Clean for final image
FROM dev-base AS image
COPY --from=build /opt/conda /opt/conda
COPY --from=build /workspace/pytorch /workspace/pytorch
COPY --from=build /workspace/torchdynamo /workspace/torchdynamo
COPY --from=build /workspace/benchmark /workspace/benchmark
WORKDIR /workspace/pytorch
