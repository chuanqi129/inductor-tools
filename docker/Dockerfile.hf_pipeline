ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE} AS dev-base
RUN apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        bc \
        build-essential \
        ca-certificates \
        ccache \
        cmake \
        curl \
        ffmpeg \
        git \
        libtcmalloc-minimal4 \
        libjpeg-dev \
        libpng-dev \
        libsm6 \
        libxext6 \
        numactl \
        pybind11-dev \
        wget \
        vim \
    && rm -rf /var/lib/apt/lists/*
RUN /usr/sbin/update-ccache-symlinks
RUN mkdir /opt/ccache && ccache --set-config=cache_dir=/opt/ccache
ENV PATH /opt/conda/bin:$PATH

FROM dev-base AS conda
ARG PYTHON_VERSION=3.8
RUN curl -fsSL -v -k -o ~/miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-py38_23.9.0-0-Linux-x86_64.sh && \
    chmod +x ~/miniconda.sh && \
    # Fix conda install issue
    sed -i "s;#!/bin/sh;#!/bin/bash;" ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda config --set channel_priority strict && \
    /opt/conda/bin/conda config --append channels conda-forge && \
    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} \
        astunparse \
        cffi \
        cython \
        cmake>=3.13.0 \
        dataclasses \
        future \
        git-lfs \
        intel-openmp \
        ipython \
        mkl \
        mkl-include \
        ninja \
        numpy \
        requests \
        typing \
        typing_extensions \
        Pillow \
        pkg-config \
        pybind11 \
        pyyaml \
        setuptools \
        jemalloc \
        openssl \      
        weasyprint && \
    /opt/conda/bin/conda init && \
    /opt/conda/bin/conda clean -ya && \
    # Fix GLIBCXX version issue
    rm -f /opt/conda/lib/libstdc++.so.6

FROM dev-base AS build
COPY --from=conda /opt/conda /opt/conda
WORKDIR /workspace
ARG TORCH_REPO=$TORCH_REPO
ARG TORCH_COMMIT=$TORCH_COMMIT
RUN git clone ${TORCH_REPO} && \
    cd pytorch && git checkout ${TORCH_COMMIT} && git submodule sync && git submodule update --init --recursive && \
    python setup.py develop && cd .. && \
    python -c "import torch"

ARG TORCH_VISION_COMMIT=${VISION}
RUN git clone https://github.com/pytorch/vision.git && \
    cd vision && if [ "${TORCH_VISION_COMMIT}" = "default" ]; then git checkout `cat /workspace/pytorch/.github/ci_commit_pins/vision.txt`; else git checkout ${TORCH_VISION_COMMIT}; fi && \
    python setup.py bdist_wheel && \
    pip install dist/*.whl && cd ..

ARG TRANSFORMERS_VERSION=${TRANSFORMERS_VERSION}
RUN echo ${TRANSFORMERS_VERSION} && if [ "${TRANSFORMERS_VERSION}" = "default" ]; then \
        export TRANSFORMERS_COMMIT=`cat /workspace/pytorch/.ci/docker/ci_commit_pins/huggingface.txt`; \
        pip install --force-reinstall git+https://github.com/huggingface/transformers@${TRANSFORMERS_COMMIT}; \
    else \
        pip install --force-reinstall transformers==${TRANSFORMERS_VERSION}; \
    fi

ARG HF_TEST_REPO=$HF_TEST_REPO
ARG HF_TEST_COMMIT=$HF_TEST_COMMIT
RUN git clone ${HF_TEST_REPO} && \
    cd hf_testcase && git checkout ${HF_TEST_COMMIT} && \
    cd .. && \
    pip install mpmath==1.3.0 fire diffusers

# Clean for final image
FROM dev-base AS image
COPY --from=build /opt/conda /opt/conda
COPY --from=build /workspace/pytorch /workspace/pytorch
COPY --from=build /workspace/hf_testcase /workspace/hf_testcase
COPY --from=build /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /opt/conda/lib
WORKDIR /workspace/hf_testcase